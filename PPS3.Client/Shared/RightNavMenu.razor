@inject NavigationManager NavigationManager
@inject IServRubro ServRubro

<MudDrawer Anchor="Anchor.End" @bind-Open="SideBarOpen" Elevation="1">
    <MudDrawerHeader Style="margin-bottom:20px;">
        <MudAvatar Color="Color.Transparent" Size="Size.Large" Image="images/expo_ceramicas_logo.png" />
        <MudText Typo="Typo.h6" Color="Color.Primary" Style="margin-top:10px; margin-left:15px;">CATEGORIAS</MudText>
    </MudDrawerHeader>

    <MudNavMenu>

        @if(rubros.Count() > 0)
        {
            @foreach(var rub in rubros)
            {
                <MudNavGroup Title="@rub.DescRubro" Icon="@Icons.Filled.HdrWeak">
                    @if(rub.Categorias != null && rub.Categorias.Count() > 0)
                    {
                        @foreach (var cat in rub.Categorias)
                        {
                            <MudNavLink OnClick="@(() => NavegarAPagina(cat.IdTipo))" Match="NavLinkMatch.All" Icon="@Icons.Filled.HdrStrong">@cat.DescripcionTipo</MudNavLink>
                        }                        
                    }
                    else
                    {
                        <MudNavLink><MudText Typo="Typo.body1" Color="Color.Info">El Rubro no posee una Categoria disponible</MudText></MudNavLink>                        
                    }                    
                </MudNavGroup>
            }
        }
        else
        {
            <MudText Typo="Typo.body1" Color="Color.Info" Style="margin-top:10px; margin-left:15px;">Todavía no hay Categorias configuradas</MudText>
        }
    </MudNavMenu>
</MudDrawer>

@code{
    [Parameter]
    public bool SideBarOpen { get; set; }

    IEnumerable<RubroCategoria> rubros = new List<RubroCategoria>();

    protected override async Task OnInitializedAsync() => rubros = await ServRubro.ObtenerRubrosCategorias();

    protected void NavegarAPagina(int idCategoria) => NavigationManager.NavigateTo($"/productosEnCategoria/{idCategoria}", true);
}