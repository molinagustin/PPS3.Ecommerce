@page "/movimientosCuentaCorriente/{id:int}"
@inject IServEncabezadoCuentaCorriente ServCuentaCorriente
@inject IServEncabezadoComprobante ServComprobante
@inject IServEncabezadoRecibo ServRecibo
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar /*Servicio para las notificaciones*/
@inject IJSRuntime JS /*JS Interop*/
@using Radzen.Blazor
@*Con el atributo Authorize se procede a regular el acceso a toda la pagina por usuarios autorizados solamente*@
@attribute [Authorize(Roles = "1, 2")]

<AuthorizeView Context="usCont">
    <input type="hidden" id="UsAct" value="@usCont.User.Claims.First().Value" />
</AuthorizeView>

<MudText Align="Align.Center" Typo="Typo.h5" Style="margin-bottom:30px;">Movimientos de la Cuenta Corriente</MudText>

<MudButton StartIcon="@Icons.Material.Filled.ArrowBack" Color="Color.Primary" Variant="Variant.Outlined" Href="/listaCuentasCorrientes" Size="Size.Small" Style="margin-bottom:10px;">Volver</MudButton>

@if(cuenta == null || comprobantes == null)
{
    <MudProgressLinear Color="Color.Primary" Striped="true" Indeterminate="true" Class="my-1"/>
}
else
{
    @if(comprobantes == null || comprobantes.Count() == 0)
    {
        <MudText Align="Align.Center" Typo="Typo.h5" Color="Color.Error" Style="margin-top:20px;">La cuenta no posee movimientos de comprobantes todavia</MudText>
    }
    else
    {
        @*LISTADO DE COMPROBANTES DE LA CUENTA*@
        <RadzenGrid Data="@comprobantes" TItem="Comprobante" RowSelect="@(args => comprobante = args)" AllowFiltering="true" FilterCaseSensitivity="Radzen.FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="10" AllowSorting="true" Style="margin-bottom:10px;" AllowColumnResize="true">
            <Columns>
                <RadzenGridColumn TItem="Comprobante" Property="IdEncab" Title="N° Comp." Width="100px"></RadzenGridColumn>
                <RadzenGridColumn TItem="Comprobante" Property="TipoComp" Title="Tipo Comp." Width="140px"></RadzenGridColumn>
                <RadzenGridColumn TItem="Comprobante" Property="FechaComp" Title="Fecha Comp." Width="140px">
                    <Template Context="fechaComp">
                        @string.Format("{0:d}", fechaComp.FechaComp)
                    </Template>
                </RadzenGridColumn>
                <RadzenGridColumn TItem="Comprobante" Property="Cliente" Title="Cliente" Width="160px"></RadzenGridColumn>
                @*<RadzenGridColumn TItem="Comprobante" Property="FormaP" Title="Forma Pago"></RadzenGridColumn>*@
                <RadzenGridColumn TItem="Comprobante" Property="ImporteFinal" Title="Importe Final" Width="150px">
                    <Template Context="impFin">
                        @string.Format(new System.Globalization.CultureInfo("es-AR"), "{0:C}", impFin.ImporteFinal)
                    </Template>
                </RadzenGridColumn>
                <RadzenGridColumn TItem="Comprobante" Property="SaldoRestante" Title="Saldo Restante" Width="150px">
                    <Template Context="saldo">
                        @string.Format(new System.Globalization.CultureInfo("es-AR"), "{0:C}", saldo.SaldoRestante)
                    </Template>
                </RadzenGridColumn>
                <RadzenGridColumn TItem="Comprobante" Property="Pagado" Title="¿Pagado?" Width="100px">
                    <Template Context="pgdo">
                        @if(pgdo.Pagado)
                        {
                            <MudIcon Icon="@Icons.Filled.Check" Color="Color.Success"></MudIcon>
                        }
                        else
                        {
                            <MudIcon Icon="@Icons.Filled.Dangerous" Color="Color.Error"></MudIcon>
                        }
                    </Template>
                </RadzenGridColumn>
                <RadzenGridColumn TItem="Comprobante" Property="Observaciones" Title="Observaciones"></RadzenGridColumn>
                <RadzenGridColumn TItem="Comprobante" Property="UsuarioCrea" Title="Creado Por" Width="160px"></RadzenGridColumn>
            </Columns>
        </RadzenGrid>

        @*DETALLES DE CADA COMPROBANTE*@
        <RadzenTabs>
            <Tabs>
                <RadzenTabsItem Text="Detalles del Comprobante">
                    <RadzenGrid Data="@comprobante.DetallesComprobante" TItem="DetalleComprobante" AllowFiltering="true" FilterCaseSensitivity="Radzen.FilterCaseSensitivity.CaseInsensitive" AllowPaging="true"  AllowSorting="true">
                        <Columns>
                            <RadzenGridColumn TItem="DetalleComprobante" Property="NombreProd" Title="Nombre Producto"></RadzenGridColumn>
                            <RadzenGridColumn TItem="DetalleComprobante" Property="CantidadProdC" Title="Cantidad" Width="160px"></RadzenGridColumn>
                            <RadzenGridColumn TItem="DetalleComprobante" Property="DescripcionUnidad" Title="Unidad Medida" Width="180px"></RadzenGridColumn>
                            <RadzenGridColumn TItem="DetalleComprobante" Property="PrecioUnitario" Title="Precio Venta" Width="180px">
                                <Template Context="precio">
                                    @string.Format(new System.Globalization.CultureInfo("es-AR"), "{0:C}", precio.PrecioUnitario)
                                </Template>
                            </RadzenGridColumn>
                            <RadzenGridColumn TItem="DetalleComprobante" Property="Bonificacion" Title="Bonificacion" Width="180px">
                                <Template Context="precio">
                                    @string.Format(new System.Globalization.CultureInfo("es-AR"), "{0} %", precio.Bonificacion)
                                </Template>
                            </RadzenGridColumn>
                            <RadzenGridColumn TItem="DetalleComprobante" Property="BonificacionTotal" Title="BonificacionTotal" Width="180px">
                                <Template Context="boniftot">
                                    @string.Format(new System.Globalization.CultureInfo("es-AR"), "{0:C}", boniftot.BonificacionTotal)
                                </Template>
                            </RadzenGridColumn>
                            <RadzenGridColumn TItem="DetalleComprobante" Property="Total" Title="Sub Total" Width="200px">
                                <Template Context="subt">
                                    @string.Format(new System.Globalization.CultureInfo("es-AR"), "{0:C}", subt.Total)
                                </Template>
                            </RadzenGridColumn>
                        </Columns>
                    </RadzenGrid>
                </RadzenTabsItem>
                <RadzenTabsItem Text="Recibos Asociados">
                    @if(recibosComp == null)
                    {
                        <MudText Align="Align.Center" Typo="Typo.h6">Sin Recibos Asociados</MudText>
                    }
                    else
                    {
                        <RadzenGrid Data="@recibosComp" TItem="Recibo" AllowFiltering="true" FilterCaseSensitivity="Radzen.FilterCaseSensitivity.CaseInsensitive" AllowPaging="true"  AllowSorting="true" AllowColumnResize="true">
                            <Columns>
                                <RadzenGridColumn TItem="Recibo" Property="IdRecibo" Title="N° Recibo" Width="120px"></RadzenGridColumn>
                                <RadzenGridColumn TItem="Recibo" Property="IdComprobante" Title="N° Comprobante" Width="140px"></RadzenGridColumn>
                                <RadzenGridColumn TItem="Recibo" Property="FechaRecibo" Title="Fecha Recibo" Width="140px">
                                    <Template Context="fechaRec">
                                        @string.Format("{0:d}", fechaRec.FechaRecibo)
                                    </Template>
                                </RadzenGridColumn>  
                                <RadzenGridColumn TItem="Recibo" Property="Importe" Title="Importe del Detalle" Width="165px">
                                    <Template Context="imp">
                                        @string.Format(new System.Globalization.CultureInfo("es-AR"), "{0:C}", imp.Importe)
                                    </Template>
                                </RadzenGridColumn>  
                                <RadzenGridColumn TItem="Recibo" Property="ImporteTotal" Title="Importe Total del Recibo" Width="200px">
                                    <Template Context="impT">
                                        @string.Format(new System.Globalization.CultureInfo("es-AR"), "{0:C}", impT.ImporteTotal)
                                    </Template>
                                </RadzenGridColumn>
                                <RadzenGridColumn TItem="Recibo" Property="FormaP" Title="Forma Pago" Width="150px"></RadzenGridColumn>
                                @*<RadzenGridColumn TItem="Recibo" Property="NombreTarj" Title="Tarjeta"></RadzenGridColumn>  *@
                                <RadzenGridColumn TItem="Recibo" Property="NumTarjeta" Title="N° Tarj." Width="120px">
                                    <Template Context="numT">
                                        @if(string.IsNullOrEmpty(numT.NumTarjeta))
                                        {
                                            @string.Format("------");
                                        }
                                        else
                                        {
                                            @string.Format("...{0}", numT.NumTarjeta);
                                        }
                                    </Template>
                                </RadzenGridColumn>  
                                <RadzenGridColumn TItem="Recibo" Property="Observaciones" Title="Observaciones"></RadzenGridColumn>  
                                <RadzenGridColumn TItem="Recibo" Property="UsuarioCrea" Title="Emitido Por" Width="130px"></RadzenGridColumn>  
                            </Columns>
                        </RadzenGrid>
                    }                
                </RadzenTabsItem>
            </Tabs>
        </RadzenTabs>
    }

}

@code {
    //Parametro que se recibe por URL para una consulta del objeto
    [Parameter]
    public int id { get; set; }

    //Para almacenar el ID del usuario actual
    private int idUsAct;

    EncabezadoCuentaCorriente cuenta;
    IEnumerable<Comprobante> comprobantes;
    Comprobante comprobante = new Comprobante();
    IEnumerable<Recibo> recibosCliente;
    IEnumerable<Recibo> recibosComp;

    //Guardo el ID del usuario actual
    protected override async Task OnAfterRenderAsync(bool firstRender) => idUsAct = Convert.ToInt32(await JS.InvokeAsync<string>("getUserId"));

    protected override async Task OnInitializedAsync()
    {
        //Obtengo valores de la cuenta corriente y busco sus comprobantes y recibos
        cuenta = await ServCuentaCorriente.ObtenerCuentaCorriente(id);
        comprobantes = await ServComprobante.ObtenerComprobantesListCliente(cuenta.ClienteCC);
        recibosCliente = await ServRecibo.ObtenerRecibosListPorCliente(cuenta.ClienteCC);

        //En base al comprobante seleccionado, filtro los recibos correspondientes
        recibosComp = recibosCliente.Where(x => x.IdComprobante == comprobante.IdEncab);
    }

    protected void Cancelar() => NavigationManager.NavigateTo("/listaCuentasCorrientes");
}