@page "/validacionEmail/{id:int}"
@inject IServUsuario ServUsuario
@inject NavigationManager NavigationManager
@inject IJSRuntime JS /*JS Interop*/
@inject ISnackbar Snackbar /*Servicio para las notificaciones*/

@if (id > 0)
{    
    <MudGrid Justify="Justify.Center">
        <MudItem xs="3"></MudItem>
        <MudItem xs="6">
                <MudText Align="Align.Center" Typo="Typo.h4">Validando Correo</MudText>
                <MudProgressLinear Color="Color.Primary" Striped="true" Indeterminate="true" Class="my-1"/>
        </MudItem>
        <MudItem xs="3"></MudItem>
    </MudGrid>
}

@code {
    [Parameter]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var idReal = ((id - 1) / 3) / 37;
            var validado = await ServUsuario.ValidarEmailUsuario(idReal);

            if (validado)
            {
                NavigationManager.NavigateTo("/");
                Snackbar.Add($"Correo validado exitosamente", Severity.Success);
            }
            else
            {
                NavigationManager.NavigateTo("/");
                Snackbar.Add($"No se pudo validar el correo, comprobar el link.", Severity.Error);
            }
        }
        catch (Exception) { NavigationManager.NavigateTo("/"); }
    }
}