@page "/listaProductos"
@inject IServProducto ServProducto
@inject NavigationManager NavigationManager
@using Radzen.Blazor
@*Con el atributo Authorize se procede a regular el acceso a toda la pagina por usuarios autorizados solamente*@
@attribute [Authorize(Roles = "1, 2")]

<MudText Align="Align.Center" Typo="Typo.h5">Listado de Productos</MudText>

@if(productos == null)
{
    <MudProgressLinear Color="Color.Primary" Striped="true" Indeterminate="true" Class="my-1"/>
}
else
{    
    <RadzenGrid Data="@productos" TItem="ProductoListado" AllowFiltering="true" AllowPaging="true" AllowSorting="true" FilterCaseSensitivity="Radzen.FilterCaseSensitivity.CaseInsensitive" AllowColumnResize=true>
        <Columns>
            <RadzenGridColumn TItem="ProductoListado" Property="NombreProd" Title="Nombre"></RadzenGridColumn>
            <RadzenGridColumn TItem="ProductoListado" Property="Descripcion" Title="Descripcion"></RadzenGridColumn>
            <RadzenGridColumn TItem="ProductoListado" Property="DescRubro" Title="Rubro"></RadzenGridColumn>
            <RadzenGridColumn TItem="ProductoListado" Property="DescripcionTipo" Title="Tipo Producto"></RadzenGridColumn>
            <RadzenGridColumn TItem="ProductoListado" Property="PrecioCosto" Title="Precio de Costo">
                <Template Context="pcosto">
                    @string.Format(new System.Globalization.CultureInfo("es-AR"), "{0:C}", pcosto.PrecioCosto)
                </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="ProductoListado" Property="PrecioFinal" Title="Precio Final">
                <Template Context="pfinal">
                    @string.Format(new System.Globalization.CultureInfo("es-AR"), "{0:C}", pfinal.PrecioFinal)
                </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="ProductoListado" Property="NombreProv" Title="Proveedor"></RadzenGridColumn>
            <RadzenGridColumn TItem="ProductoListado" Property="DescripcionUnidad" Title="Medido en"></RadzenGridColumn>
            @*<RadzenGridColumn TItem="ProductoListado" Property="CantMinAlerta" Title="Alerta de Cantidad"></RadzenGridColumn>*@
            <RadzenGridColumn TItem="ProductoListado" Property="StockExistencia" Title="Stock Existencia"></RadzenGridColumn>
            <RadzenGridColumn TItem="ProductoListado" Property="UsuarioCrea" Title="Creado por"></RadzenGridColumn>
            <RadzenGridColumn TItem="ProductoListado" Property="UsuarioModif" Title="Modificado por"></RadzenGridColumn>
            @*<RadzenGridColumn TItem="ProductoListado" Property="FechaCrea" Title="Fecha Creacion"></RadzenGridColumn>*@
            <RadzenGridColumn TItem="ProductoListado" Property="FechaUltModif" Title="Fecha Ult. Modif."></RadzenGridColumn>
            <RadzenGridColumn TItem="ProductoListado" Property="IdProducto">
                <Template Context="acciones">
                    <RadzenButton ButtonStyle="Radzen.ButtonStyle.Info" Icon="info" Click="@(() => NavigationManager.NavigateTo($"/detallesProducto/{acciones.IdProducto}"))" Size="Radzen.ButtonSize.Small" Text="Edit"/>
                    <RadzenButton ButtonStyle="Radzen.ButtonStyle.Warning" Icon="open_in_new" Click="@(() => NavigationManager.NavigateTo($"/detallesProducto/imagenes/{acciones.IdProducto}"))" Size="Radzen.ButtonSize.Small" Text="Img"/>
                </Template>
            </RadzenGridColumn>
        </Columns>
    </RadzenGrid>
}

<MudText Align="Align.Center" Typo="Typo.h6">Listado de Productos Inactivos</MudText>

@if(productos == null)
{
    <MudProgressLinear Color="Color.Primary" Striped="true" Indeterminate="true" Class="my-1"/>
}
else
{    
    <RadzenGrid Data="@productosInactivos" TItem="ProductoListado" AllowFiltering="true" AllowPaging="true" AllowSorting="true" FilterCaseSensitivity="Radzen.FilterCaseSensitivity.CaseInsensitive" AllowColumnResize=true>
        <Columns>
            <RadzenGridColumn TItem="ProductoListado" Property="NombreProd" Title="Nombre"></RadzenGridColumn>
            <RadzenGridColumn TItem="ProductoListado" Property="Descripcion" Title="Descripcion"></RadzenGridColumn>
            <RadzenGridColumn TItem="ProductoListado" Property="DescRubro" Title="Rubro"></RadzenGridColumn>
            <RadzenGridColumn TItem="ProductoListado" Property="DescripcionTipo" Title="Tipo Producto"></RadzenGridColumn>
            <RadzenGridColumn TItem="ProductoListado" Property="PrecioCosto" Title="Precio de Costo">
                <Template Context="pcosto">
                    @string.Format(new System.Globalization.CultureInfo("es-AR"), "{0:C}", pcosto.PrecioCosto)
                </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="ProductoListado" Property="PrecioFinal" Title="Precio Final">
                <Template Context="pfinal">
                    @string.Format(new System.Globalization.CultureInfo("es-AR"), "{0:C}", pfinal.PrecioFinal)
                </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="ProductoListado" Property="NombreProv" Title="Proveedor"></RadzenGridColumn>
            <RadzenGridColumn TItem="ProductoListado" Property="DescripcionUnidad" Title="Medido en"></RadzenGridColumn>
            @*<RadzenGridColumn TItem="ProductoListado" Property="CantMinAlerta" Title="Alerta de Cantidad"></RadzenGridColumn>*@
            <RadzenGridColumn TItem="ProductoListado" Property="StockExistencia" Title="Stock Existencia"></RadzenGridColumn>
            <RadzenGridColumn TItem="ProductoListado" Property="UsuarioCrea" Title="Creado por"></RadzenGridColumn>
            <RadzenGridColumn TItem="ProductoListado" Property="UsuarioModif" Title="Modificado por"></RadzenGridColumn>
            @*<RadzenGridColumn TItem="ProductoListado" Property="FechaCrea" Title="Fecha Creacion"></RadzenGridColumn>*@
            <RadzenGridColumn TItem="ProductoListado" Property="FechaUltModif" Title="Fecha Ult. Modif."></RadzenGridColumn>
            <RadzenGridColumn TItem="ProductoListado" Property="IdProducto">
                <Template Context="acciones">
                    <RadzenButton ButtonStyle="Radzen.ButtonStyle.Info" Icon="info" Click="@(() => NavigationManager.NavigateTo($"/detallesProducto/{acciones.IdProducto}"))" Size="Radzen.ButtonSize.Small" Text="Edit"/>
                    <RadzenButton ButtonStyle="Radzen.ButtonStyle.Warning" Icon="open_in_new" Click="@(() => NavigationManager.NavigateTo($"/detallesProducto/imagenes/{acciones.IdProducto}"))" Size="Radzen.ButtonSize.Small" Text="Img"/>
                </Template>
            </RadzenGridColumn>
        </Columns>
    </RadzenGrid>
}

@code {
    IEnumerable<ProductoListado> productos;
    IEnumerable<ProductoListado> productosInactivos;

    protected override async Task OnInitializedAsync()
    {
        productos = await ServProducto.ObtenerProductos();
        productosInactivos = await ServProducto.ObtenerProductosInactivos();
    }
}