@page "/listaLocalidades"
@inject IServLocalidad ServLocal
@attribute [Authorize(Roles = "1")]

<MudText Align="Align.Center" Typo="Typo.h5">Listado de Localidades</MudText>

@if(locals == null)
{
    <MudProgressLinear Color="Color.Primary" Striped="true" Indeterminate="true" Class="my-1"/>
}
else
{
    <MudTable Items="@locals" Hover="true" Striped="true" FixedHeader="true" Filter="new Func<Localidad, bool>(FilterFunc)">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Localidades</MudText>
            <MudSpacer/>
            <MudTextField @bind-Value="nombreBuscar" Placeholder="Buscar" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"/>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Id Localidad</MudTh>
            <MudTh>Nombre</MudTh>
            <MudTh>Provincia</MudTh>
            <MudTh>Codigo Postal</MudTh>
            <MudTh>Activo</MudTh>
            <MudTh>Usuario Creacion</MudTh>
            <MudTh>Fecha Creacion</MudTh>
            <MudTh>Usuario Ult. Modif.</MudTh>
            <MudTh>Fecha Ult. Modif.</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id Localidad">@context.IdLocalidad</MudTd>
            <MudTd DataLabel="Nombre">@context.NombreLoc</MudTd>
            <MudTd DataLabel="Provincia">@context.Provincia</MudTd>
            <MudTd DataLabel="Codigo Postal">@context.CP</MudTd>
            <MudTd DataLabel="Activo">@context.Activo</MudTd>
            <MudTd DataLabel="Usuario Creacion">@context.UsuarioCrea</MudTd>
            <MudTd DataLabel="Fecha Creacion">@context.FechaCrea</MudTd>
            <MudTd DataLabel="Usuario Ult. Modif.">@context.UsuarioModif</MudTd>
            <MudTd DataLabel="Fecha Ult. Modif.">@context.FechaUltModif</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager/>
        </PagerContent>
    </MudTable>
}

@code {
    IEnumerable<Localidad>? locals;
    private string nombreBuscar = "";

    //Obtengo la lista de localidades
    protected override async Task OnInitializedAsync() => locals = await ServLocal.ObtenerLocalidades();

    private bool FilterFunc(Localidad local)
    {
        if (string.IsNullOrWhiteSpace(nombreBuscar))
            return true;
        if (local.CP.Contains(nombreBuscar, StringComparison.OrdinalIgnoreCase))
            return true;
        if (local.NombreLoc.Contains(nombreBuscar, StringComparison.OrdinalIgnoreCase))
            return true;
        if (local.Provincia.ToString().Contains(nombreBuscar, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }
}
