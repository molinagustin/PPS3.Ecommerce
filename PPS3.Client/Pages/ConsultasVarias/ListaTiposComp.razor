@page "/listaTiposComp"
@inject IServTipoComprobante ServTipoComp
@attribute [Authorize(Roles = "1")]

<MudText Align="Align.Center" Typo="Typo.h5" Style="margin-bottom:30px;">Listado de Tipos de Comprobantes</MudText>

@if(tiposComp == null)
{
    <MudProgressLinear Color="Color.Primary" Striped="true" Indeterminate="true" Class="my-1"/>
}
else
{
    <MudTable Items="@tiposComp" Hover="true" Striped="true" FixedHeader="true" Filter="new Func<TipoComprobante, bool>(FilterFunc)">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Tipos de Comprobantes</MudText>
            <MudSpacer/>
            <MudTextField @bind-Value="nombreBuscar" Placeholder="Buscar" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"/>
        </ToolBarContent>
        <HeaderContent>
            <MudTh Style="width:100px;">Id Tipo Comprobante</MudTh>
            <MudTh>Tipo de Comprobante</MudTh>
            <MudTh>Activo</MudTh>
            @*<MudTh>Usuario Creacion</MudTh>*@
            <MudTh>Fecha Creacion</MudTh>
            @*<MudTh>Usuario Ult. Modif.</MudTh>*@
            <MudTh>Fecha Ult. Modif.</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id Tipo Comprobante">@context.IdTipoC</MudTd>
            <MudTd DataLabel="Tipo de Comprobante">@context.TipoComp</MudTd>
            <MudTd DataLabel="Activo">@context.Activo</MudTd>
            @*<MudTd DataLabel="Usuario Creacion">@context.UsuarioCrea</MudTd>*@
            <MudTd DataLabel="Fecha Creacion">@context.FechaCrea</MudTd>
            @*<MudTd DataLabel="Usuario Ult. Modif.">@context.UsuarioModif</MudTd>*@
            <MudTd DataLabel="Fecha Ult. Modif.">@context.FechaUltModif</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager/>
        </PagerContent>
    </MudTable>
}

@code {
    IEnumerable<TipoComprobante>? tiposComp;
    private string nombreBuscar = "";

    //Obtengo la lista de tarjetas
    protected override async Task OnInitializedAsync() => tiposComp = await ServTipoComp.ObtenerTiposComp();

    private bool FilterFunc(TipoComprobante tc)
    {
        if (string.IsNullOrWhiteSpace(nombreBuscar))
            return true;
        if (tc.TipoComp.Contains(nombreBuscar, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }
}
