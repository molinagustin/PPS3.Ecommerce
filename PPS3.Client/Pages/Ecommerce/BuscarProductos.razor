@page "/productosEnCategoria/{nombreProducto}"
@page "/productosEnCategoria/{id:int}"
@inject IServProducto ServProducto
@inject IServTipoProducto ServTipoProducto
@inject NavigationManager NavigationManager

@if (productos == null)
{
    <MudProgressLinear Color="Color.Primary" Striped="true" Indeterminate="true" Class="my-1" />
}
else
{
    //Compruebo que exista al menos 1 producto en la seleccion
    @if(productos.Count() > 0)
    {
        @if (id > 0)
        {
            <MudText Align="Align.Center" Typo="Typo.h5" Color="Color.Default" Style="margin-bottom:30px;">Productos Disponibles en Categoria <b>@categoria.DescripcionTipo</b></MudText>

            <MudGrid Justify="Justify.Center">
                <MudItem xs="3">
                    <MudText Align="Align.Center" Typo="Typo.body1" Color="Color.Default" >Últimas Valoraciones</MudText>
                </MudItem>
                <MudItem xs="6"><br /></MudItem>
                <MudItem xs="3"><br></MudItem>
            </MudGrid>

            @*Por cada producto, se generará una grilla completa*@
            @foreach(var prod in productos)
            {
                <MudGrid Justify="Justify.Center">
                    <MudItem xs="3">
                        <MudCard Elevation="0" Style="height:200px; margin-bottom:20px;">
                            <MudCardContent>
                                <MudStack Row=true>
                                    <MudAvatar Color="Color.Transparent" Size="Size.Large" Image="images/avatar_hombre_2.jpg" />
                                    <MudText Align="Align.Left" Typo="Typo.body1" Style="margin-bottom:5px; margin-top:15px;" Color="Color.Primary">Mauro Reyna</MudText>
                                </MudStack>
                                <MudText Align="Align.Left" Typo="Typo.body2" Style="margin-bottom:5px; margin-top:10px;" Color="Color.Default">"Excelente Producto"</MudText>
                                <MudRating ReadOnly=true SelectedValue="5"></MudRating>  
                            </MudCardContent>
                        </MudCard>
                    </MudItem>

                    <MudItem xs="6">
                        <MudCard Elevation="1" Style="height:200px; margin-bottom:20px;">
                            <MudCardContent>
                                <MudGrid>
                                    <MudItem xs="3">
                                        <MudImage Elevation="0" ObjectFit="ObjectFit.Fill" Src="@prod.UrlImagen" Style="width:100%; height:175px;" />
                                    </MudItem>
                                    <MudItem xs="6">
                                        <MudText Align="Align.Center" Color="Color.Primary" Typo="Typo.h6" Style="margin-bottom:30px;"><b>@prod.NombreProd</b></MudText>
                                        <MudText Typo="Typo.body1" Align="Align.Left">@prod.Descripcion</MudText>
                                    </MudItem>
                                    <MudItem xs="3">
                                        <div style="margin-top:50%; margin-left:50%;">
                                            <b>
                                                <MudText Typo="Typo.h6">$@prod.PrecioFinal</MudText>    
                                            </b>
                                        </div>
                                    </MudItem>
                                </MudGrid>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>

                    <MudItem xs="3">
                        <MudCard Elevation="0" Style="height:200px; margin-bottom:20px;">
                            <MudCardContent>
                                <MudButton Color="Color.Primary" EndIcon="@Icons.Material.Filled.ArrowRight" Size="Size.Large" Variant="Variant.Filled" Style="margin-top:50px;" OnClick="@(() => VerProducto(prod.IdProducto))">VER DETALLES</MudButton>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
            </MudGrid>
            }
        }
        else
        {
            <MudText Align="Align.Center" Typo="Typo.h5" Color="Color.Default" Style="margin-bottom:30px;">Productos disponibles encontrados con la busqueda "<b>@nombreProducto</b>"</MudText>

            <MudGrid Justify="Justify.Center">
                <MudItem xs="3">
                    <MudText Align="Align.Center" Typo="Typo.body1" Color="Color.Default" >Últimas Valoraciones</MudText>
                </MudItem>
                <MudItem xs="6"><br /></MudItem>
                <MudItem xs="3"><br></MudItem>
            </MudGrid>

            @*Por cada producto, se generará una grilla completa*@
            @foreach(var prod in productos)
            {
                <MudGrid Justify="Justify.Center">
                    <MudItem xs="3">
                        <MudCard Elevation="0" Style="height:200px; margin-bottom:20px;">
                            <MudCardContent>
                                <MudStack Row=true>
                                    <MudAvatar Color="Color.Transparent" Size="Size.Large" Image="images/avatar_hombre_2.jpg" />
                                    <MudText Align="Align.Left" Typo="Typo.body1" Style="margin-bottom:5px; margin-top:15px;" Color="Color.Primary">Mauro Reyna</MudText>
                                </MudStack>
                                <MudText Align="Align.Left" Typo="Typo.body2" Style="margin-bottom:5px; margin-top:10px;" Color="Color.Default">"Excelente Producto"</MudText>
                                <MudRating ReadOnly=true SelectedValue="5"></MudRating>  
                            </MudCardContent>
                        </MudCard>
                    </MudItem>

                    <MudItem xs="6">
                        <MudCard Elevation="1" Style="height:200px; margin-bottom:20px;">
                            <MudCardContent>
                                <MudGrid>
                                    <MudItem xs="3">
                                        <MudImage Elevation="0" ObjectFit="ObjectFit.Fill" Src="@prod.UrlImagen" Style="width:100%; height:175px;" />
                                    </MudItem>
                                    <MudItem xs="6">
                                        <MudText Align="Align.Center" Color="Color.Primary" Typo="Typo.h6" Style="margin-bottom:30px;"><b>@prod.NombreProd</b></MudText>
                                        <MudText Typo="Typo.body1" Align="Align.Left">@prod.Descripcion</MudText>
                                    </MudItem>
                                    <MudItem xs="3">
                                        <div style="margin-top:50%; margin-left:50%;">
                                            <b>
                                                <MudText Typo="Typo.h6">$@prod.PrecioFinal</MudText>    
                                            </b>
                                        </div>
                                    </MudItem>
                                </MudGrid>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>

                    <MudItem xs="3">
                        <MudCard Elevation="0" Style="height:200px; margin-bottom:20px;">
                            <MudCardContent>
                                <MudButton Color="Color.Primary" EndIcon="@Icons.Material.Filled.ArrowRight" Size="Size.Large" Variant="Variant.Filled" Style="margin-top:50px;" OnClick="@(() => VerProducto(prod.IdProducto))">VER DETALLES</MudButton>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
            </MudGrid>
            }
        }
    }
    else
    {
        <MudText Align="Align.Center" Typo="Typo.h5" Color="Color.Error">¡No se encontró ningún producto para mostrar!</MudText>
    }
}

@code {
    //Parametro que se recibe por URL para una consulta del objeto
    [Parameter]
    public int id { get; set; }

    [Parameter]
    public string nombreProducto { get; set; } = string.Empty;

    IEnumerable<ProductoListado> productos = new List<ProductoListado>();
    TipoProducto categoria = new TipoProducto();

    protected override async Task OnInitializedAsync()
    {
        if (id > 0)
        {
            categoria = await ServTipoProducto.ObtenerTipoProd(id);
            productos = await ServProducto.ObtenerProductosPorTipoProducto(id);
        }
        else
            productos = await ServProducto.ObtenerProductosPorBusqueda(nombreProducto);
    }

    protected void VerProducto(int id) => NavigationManager.NavigateTo($"/verProducto/{id}");
}
