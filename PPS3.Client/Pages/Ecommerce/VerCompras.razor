@page "/verCompras"
@inject IServCarroCompra ServCarro
@using Radzen.Blazor
@inject NavigationManager NavigationManager
@inject IJSRuntime JS /*JS Interop*/

<AuthorizeView>
    <Authorized>
        <input type="hidden" id="UsAct" value="@context.User.Claims.First().Value" />

        <MudText Align="Align.Center" Typo="Typo.h5" Style="margin-bottom:30px;">Lista de Compras</MudText>

        @if(ordenesUsuario == null)
        {
            <MudProgressLinear Color="Color.Primary" Striped="true" Indeterminate="true" Class="my-1" />
        }
        else
        {
            @if(ordenesUsuario.Count() > 0)
            {
                <RadzenGrid Data="@ordenesUsuario" TItem="OrdenesCompraListado" PageSize="10" AllowFiltering=true AllowPaging=true AllowSorting=true AllowColumnResize=true>
                    <Columns>
                        <RadzenGridColumn TItem="OrdenesCompraListado" Width="20px" TextAlign="Radzen.TextAlign.Left" Property="IdCarro" Title="# Orden"/>
                        <RadzenGridColumn TItem="OrdenesCompraListado" Width="30px" TextAlign="Radzen.TextAlign.Center" Property="Estado" Title="Estado">
                            <Template Context="estado">
                                @if(estado.Estado == "Pendiente")
                                {
                                    <MudText Color="Color.Info" Typo="Typo.body1">Pendiente</MudText>
                                }
                                else if(estado.Estado == "Aprobado")
                                {
                                    <MudText Color="Color.Success" Typo="Typo.body1">Aprobado</MudText>
                                }
                                else if(estado.Estado == "Cancelado")
                                {
                                    <MudText Color="Color.Error" Typo="Typo.body1">Cancelado</MudText>
                                }
                                else if(estado.Estado == "Finalizado")
                                {
                                    <MudText Color="Color.Primary" Typo="Typo.body1">Finalizado</MudText>
                                }
                            </Template>
                        </RadzenGridColumn>
                        <RadzenGridColumn TItem="OrdenesCompraListado" Width="40px" TextAlign="Radzen.TextAlign.Center" Property="FechaOrden" Title="Fecha de Orden"/>
                        <RadzenGridColumn TItem="OrdenesCompraListado" Width="40px" TextAlign="Radzen.TextAlign.Center" Property="FechaEntrega" Title="Fecha de Entrega">
                            <Template Context="fecha">
                                @if(fecha.FechaEntrega != null)
                                {
                                    @string.Format("{0:d}", fecha.FechaEntrega)
                                }
                                else
                                {
                                    @string.Format("- - - - -")
                                }
                            </Template>
                        </RadzenGridColumn>
                        <RadzenGridColumn TItem="OrdenesCompraListado" Width="40px" TextAlign="Radzen.TextAlign.Center" Property="FechaUltModif" Title="Ultima Modif."/>
                        <RadzenGridColumn TItem="OrdenesCompraListado" Width="40px" TextAlign="Radzen.TextAlign.Left" Property="Total" Title="Importe Total">
                            <Template Context="importe">
                                @string.Format(new System.Globalization.CultureInfo("es-AR"), "{0:C}", importe.Total)
                            </Template>
                        </RadzenGridColumn>
                        <RadzenGridColumn TItem="OrdenesCompraListado" Width="20px" TextAlign="Radzen.TextAlign.Center" Property="Pagado" Title="Pagado">
                            <Template Context="pagado">
                                @if(pagado.Pagado)
                                {
                                    <MudIcon Icon="@Icons.Filled.Check" Color="Color.Success"></MudIcon>
                                }
                                else
                                {
                                    <MudIcon Icon="@Icons.Filled.Dangerous" Color="Color.Error"></MudIcon>
                                }
                            </Template>
                        </RadzenGridColumn>
                        <RadzenGridColumn TItem="OrdenesCompraListado" Width="30px" TextAlign="Radzen.TextAlign.Center" Property="FechaPago" Title="Fecha Pago">
                            <Template Context="fechaP">
                                @if (fechaP.FechaPago != null)
                                {
                                    @string.Format("{0:d}", fechaP.FechaPago)
                                }
                                else
                                {
                                    @string.Format("- - - - -")
                                }
                            </Template>
                        </RadzenGridColumn>
                        <RadzenGridColumn TItem="OrdenesCompraListado" Width="30px" TextAlign="Radzen.TextAlign.Center" Property="FormaP" Title="Forma Pago"/>
                        @*<RadzenGridColumn TItem="OrdenesCompraListado" Width="50px" TextAlign="Radzen.TextAlign.Left" Property="Observaciones" Title="Observaciones"/>*@
                        <RadzenGridColumn TItem="OrdenesCompraListado" Width="25px" TextAlign="Radzen.TextAlign.Center" Property="IdCarro">
                            <Template Context="acciones">
                                <RadzenButton ButtonStyle="Radzen.ButtonStyle.Info" Icon="info" Class="m-1" Size="Radzen.ButtonSize.Small" Text="Ver" Click="@(() => VerDetalles(acciones.IdCarro))"/>
                            </Template>
                        </RadzenGridColumn>
                    </Columns>
                </RadzenGrid>
            }
            else
            {
                <MudText Align="Align.Center" Typo="Typo.h5" Color="Color.Info">Todavia no has realizado ningun pedido. ¡Animate a realizar uno!</MudText>
            }
        }
    </Authorized>

    <NotAuthorized>
        <input type="hidden" id="UsAct" value="0" />

        <MudText Align="Align.Center" Typo="Typo.h4" Color="Color.Error">No esta autorizado a ver el contenido</MudText>
    </NotAuthorized>
</AuthorizeView>

@code {
    //Para almacenar el ID del usuario actual
    private int idUsAct;

    private IEnumerable<OrdenesCompraListado> ordenesUsuario;

    //Guardo el ID del usuario actual
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //Busco el Id del Usuario y si es valido, busco sus ordenes de compra
        idUsAct = Convert.ToInt32(await JS.InvokeAsync<string>("getUserId"));
        if(idUsAct > 0)
            ordenesUsuario = await ServCarro.ObtenerOrdenesCompraUsuario(idUsAct);
        StateHasChanged();
    }

    private void VerDetalles(int idOrden) => NavigationManager.NavigateTo($"/verCompras/verDetalle/{idOrden}");
}